{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\WebDev\\\\JS\\\\COMP2068JavaScript-ExpressGenerator\\\\storeExample-react\\\\src\\\\PizzaForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PizzaForm = () => {\n  _s();\n  // State variables for form fields\n  const [customer, setCustomer] = useState('');\n  const [selectedSize, setSelectedSize] = useState('');\n  const [selectedToppings, setSelectedToppings] = useState([]);\n  const [selectedDip, setSelectedDip] = useState('');\n  const [selectedSide, setSelectedSide] = useState('');\n\n  // ... (Other state variables and functions as needed)\n\n  const handleSizeChange = event => {\n    const newSize = event.target.value;\n    // Update the state with the selected size\n    setSelectedSize(newSize);\n    // ... (Any other logic related to size change)\n  };\n  const handleToppingChange = event => {\n    const selectedTopping = event.target.value;\n    // Update the state with the selected toppings\n    setSelectedToppings(prevToppings => event.target.checked ? [...prevToppings, selectedTopping] : prevToppings.filter(topping => topping !== selectedTopping));\n    // ... (Any other logic related to topping change)\n  };\n  const handleDipChange = event => {\n    const newDip = event.target.value;\n    // Update the state with the selected dip\n    setSelectedDip(newDip);\n    // ... (Any other logic related to dip change)\n  };\n  const handleSideChange = event => {\n    const newSide = event.target.value;\n    // Update the state with the selected side\n    setSelectedSide(newSide);\n    // ... (Any other logic related to side change)\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // ... (Handle form submission logic, e.g., create a Pizza object)\n  };\n\n  // Render the form using JSX\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSize,\n      onChange: handleSizeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: \"olive\",\n      onChange: handleToppingChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDip,\n      onChange: handleDipChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSide,\n      onChange: handleSideChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PizzaForm, \"i4mM8h5SjzIKABeAbJpCUs+ma0k=\");\n_c = PizzaForm;\nexport default PizzaForm;\nvar _c;\n$RefreshReg$(_c, \"PizzaForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PizzaForm","_s","customer","setCustomer","selectedSize","setSelectedSize","selectedToppings","setSelectedToppings","selectedDip","setSelectedDip","selectedSide","setSelectedSide","handleSizeChange","event","newSize","target","value","handleToppingChange","selectedTopping","prevToppings","checked","filter","topping","handleDipChange","newDip","handleSideChange","newSide","handleSubmit","preventDefault","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/Josh/Desktop/WebDev/JS/COMP2068JavaScript-ExpressGenerator/storeExample-react/src/PizzaForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PizzaForm = () => {\r\n  // State variables for form fields\r\n  const [customer, setCustomer] = useState('');\r\n  const [selectedSize, setSelectedSize] = useState('');\r\n  const [selectedToppings, setSelectedToppings] = useState([]);\r\n  const [selectedDip, setSelectedDip] = useState('');\r\n  const [selectedSide, setSelectedSide] = useState('');\r\n\r\n  // ... (Other state variables and functions as needed)\r\n\r\n  const handleSizeChange = (event) => {\r\n    const newSize = event.target.value;\r\n    // Update the state with the selected size\r\n    setSelectedSize(newSize);\r\n    // ... (Any other logic related to size change)\r\n  };\r\n\r\n  const handleToppingChange = (event) => {\r\n    const selectedTopping = event.target.value;\r\n    // Update the state with the selected toppings\r\n    setSelectedToppings((prevToppings) =>\r\n      event.target.checked\r\n        ? [...prevToppings, selectedTopping]\r\n        : prevToppings.filter((topping) => topping !== selectedTopping)\r\n    );\r\n    // ... (Any other logic related to topping change)\r\n  };\r\n\r\n  const handleDipChange = (event) => {\r\n    const newDip = event.target.value;\r\n    // Update the state with the selected dip\r\n    setSelectedDip(newDip);\r\n    // ... (Any other logic related to dip change)\r\n  };\r\n\r\n  const handleSideChange = (event) => {\r\n    const newSide = event.target.value;\r\n    // Update the state with the selected side\r\n    setSelectedSide(newSide);\r\n    // ... (Any other logic related to side change)\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // ... (Handle form submission logic, e.g., create a Pizza object)\r\n  };\r\n\r\n  // Render the form using JSX\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* ... (Other form fields) */}\r\n      <select value={selectedSize} onChange={handleSizeChange}>\r\n        {/* ... (Size options) */}\r\n      </select>\r\n\r\n      {/* ... (Other form fields) */}\r\n\r\n      <input type=\"checkbox\" value=\"olive\" onChange={handleToppingChange} />\r\n      {/* ... (Other topping checkboxes) */}\r\n\r\n      <select value={selectedDip} onChange={handleDipChange}>\r\n        {/* ... (Dip options) */}\r\n      </select>\r\n\r\n      <select value={selectedSide} onChange={handleSideChange}>\r\n        {/* ... (Side options) */}\r\n      </select>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PizzaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}